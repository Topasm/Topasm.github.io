<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Topasm blog</title>
    <link>https://blog.topasm.me/posts/</link>
    <description>Recent content in Posts on Topasm blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 22 Jan 2022 12:29:02 +0900</lastBuildDate><atom:link href="https://blog.topasm.me/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>현대 산업구조에 대한 생각</title>
      <link>https://blog.topasm.me/posts/changing_company/</link>
      <pubDate>Sat, 22 Jan 2022 12:29:02 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/changing_company/</guid>
      <description>요즘 드는생각
테슬라나 애플을 보면 sw 부터 hw 까지 전부 개발하고 있다. 이걸 왜 이게 가능해졌나 보면 점점 ai 의 발전, 오픈 소스의 영향으로 인해 한 개발자의 영향력이 전보다 훨씬 강력해졌다. 빠르게 변화하는 흐름에 빠르게 대처하기 위해 한 회사에서 전부다 처리하는게 가장 변화에 빠르게 대처하고 좋다고 생각한다. 이렇게 되면 소수의 실력자가 개발을 진행하는 방식으로 가게 된다. 이러면 사람을 어떻게 잘모으냐에 대한 문제로 이어진다.
사람을 잘 모으는 문제는 이미지 메이킹에 있다고 생각한다.</description>
    </item>
    
    <item>
      <title>동아리 홈페이지용 Discourse 설치기</title>
      <link>https://blog.topasm.me/posts/discourse_setup/</link>
      <pubDate>Sat, 15 Jan 2022 22:35:38 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/discourse_setup/</guid>
      <description>동아리 홈페이지로 여러 국산 php 오픈소스를 사용하다가 최종적으로 discourse 로 넘어왔다.
국산 서비스의 장점
 한글 지원 잘됨 가벼움, 용량 작음, 싸게 운영가능(램 500mb 부터는 쓸 수 있음) php 라 실시간으로 서버 수정이 가능함 익숙한 게시판 구조  국산 서비스의 단점
 오래된 코드, 구조로 커스텀이 쉽지 않음 웹표준에 덜 적합 마크다운 지원 안함 유튜브 임베딩이 번거로움  국산 서비스 쓸만 하긴 하다 하지만 개인적으로 업데이트가 많이 됨에도 묘하게 현대적인 부분과 구형인 부분이 공존하게 된다.</description>
    </item>
    
    <item>
      <title>로봇에서의 라이더와 카메라 사용</title>
      <link>https://blog.topasm.me/posts/lidar_and_camera/</link>
      <pubDate>Tue, 28 Dec 2021 20:45:00 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/lidar_and_camera/</guid>
      <description>로봇 자율주행의 가장 큰 쟁점중 하나는 센서를 카메라로 사용하느냐 라이더를 사용하느냐 인거 같다.
사실 나는 자율주행이 카메라나 라이더로 구현될거라고 생각하지 않는다. 인공지능으로 만들어지는 자율주행의 경우 사람이 만들어내는 변수에 빠르게 대응하지 못할거라고 생각하고, 결국에는 확률의 문제라 자율주행은 이론상 100퍼센트가 아니면 실현하기가 어렵다고 생각한다. 99.9퍼라도 1억명이 쓴다면 확률이 낮다고 해도 시스템상 문제는 있는거니까. 그리고 자율주행을 인공지능으로 구현한다고 해도, 이에 따라 교통 문화도 달라질 텐데 이걸 실시간으로 학습한다는건 불가능 하다고 본다. (지금도 기본적인 자율주행을 위해 거의 1만 km 정도의 데이터를 학습시킨다.</description>
    </item>
    
    <item>
      <title>topasm 이름의 유래</title>
      <link>https://blog.topasm.me/posts/origin_of_topasm/</link>
      <pubDate>Tue, 07 Sep 2021 08:32:22 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/origin_of_topasm/</guid>
      <description>원래 닉네임으로 이름을 쓰다가 도메인으로도 쓰고 닉네임으로도 쓸 영어 닉네임이 필요하다고 느꼈다. 아무래도 한글 이름은 영어권에서 발음하기가 어렵고 길다. 개인적으로 이름이 주는 영향이 크다고 생각하기 때문에 꽤 오랜시간동안 고민했던거 같다. 블로그에 내가 어떤 생각으로 만들었는지 기록해 놓고자 한다.
고려 했던 점 길지 않을것, 발음하기 쉬울것, 의미가 있는 이름일것 정도 고려 했다. 사실 결론적으로는 완전 만족하진 않은거 같다. 그래도 고민해서 지은거라 오래 써보고 다른 작명을 하게 되면 좀 더 나은 이름을 만들어 봐야지.</description>
    </item>
    
    <item>
      <title>Hugo 와 github action 을 이용해 블로그 만들기 - 3완</title>
      <link>https://blog.topasm.me/posts/making_blog3/</link>
      <pubDate>Mon, 06 Sep 2021 10:54:16 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/making_blog3/</guid>
      <description>저번 글까지 따라왔다면 로컬에 블로그 화면을 띄울 수 있을 것이다. 이제 github pages 와 github actions 기능을 이용해 커밋과 동시에 빌드해 사이트를 배포하도록 해본다. 그리고 커스텀 도메인을 사용하도록 설정 해본다.
repository 만들기 커스텀 도메인을 이용하지 않는 경우 저장소(repository) 이름이 사이트 주소를 결정한다. 닉네임.github.io 으로 하면 주소가 닉네임.github.io 가 되고 아무이름 으로 하면 닉네임.github.io/아무이름 이런 식으로 주소가 개설 된다.
github action 사용하기  personal access token 발급받기 github 접속 &amp;gt; developer settings &amp;gt; personal access token &amp;gt; generate new token 라고 하면 창이 뜬다.</description>
    </item>
    
    <item>
      <title>Hugo 와 github action 을 이용해 블로그 만들기 - 2</title>
      <link>https://blog.topasm.me/posts/making_blog2/</link>
      <pubDate>Wed, 25 Aug 2021 20:51:28 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/making_blog2/</guid>
      <description>이어서 VS 코드를 켰다면
. ├── config.toml ├── content/ │ └── posts/ ├── static/ └── themes/ └── PaperMod/ 이러한 폴더구조로 되어있다.
config 수정 이제 config.toml 을 수정해야 한다. Vscode 에서 config.toml파일을 클릭해 수정해보자. 내가 사용하는 papermod 의 예시는 아래와 같다.
baseURL = &amp;quot;https://examplesite.com/&amp;quot; title = &amp;quot;ExampleSite&amp;quot; paginate = 5 theme = &amp;quot;PaperMod&amp;quot; enableRobotsTXT = true buildDrafts = false buildFuture = false buildExpired = false googleAnalytics = &amp;quot;UA-123-45&amp;quot; [minify] disableXML = true minifyOutput = true [params] env = &amp;quot;production&amp;quot; title = &amp;quot;ExampleSite&amp;quot; description = &amp;quot;ExampleSite description&amp;quot; keywords = [ &amp;quot;Blog&amp;quot;, &amp;quot;Portfolio&amp;quot;, &amp;quot;PaperMod&amp;quot; ] author = &amp;quot;Me&amp;quot; images = [ &amp;quot;&amp;lt;link or path of image for opengraph, twitter-cards&amp;gt;&amp;quot; ] DateFormat = &amp;quot;January 2, 2006&amp;quot; defaultTheme = &amp;quot;auto&amp;quot; disableThemeToggle = false ShowReadingTime = true ShowShareButtons = true ShowPostNavLinks = true ShowBreadCrumbs = true ShowCodeCopyButtons = false disableSpecial1stPost = false disableScrollToTop = false comments = false hidemeta = false hideSummary = false showtoc = false tocopen = false [params.</description>
    </item>
    
    <item>
      <title>Hugo 와 github action 을 이용해 블로그 만들기 - 1</title>
      <link>https://blog.topasm.me/posts/making_blog/</link>
      <pubDate>Wed, 25 Aug 2021 14:26:08 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/making_blog/</guid>
      <description>윈도우 환경에서 내가 블로그 개발을 한 방법을 소개 한다.
레포지토리를 1개만 생성하고 github actions 를 이용해 커밋만 하면 자동으로 웹페이지로 배포 되도록 만들었다. 그리고 go 로 짜여진 hugo 를 이용하였다. 이유는 업데이트가 빠르고 빌드속도가 빠르기 때문이다.
준비물  깃헙 계정 GitHub 윈도우 터미널 설치 Windows Terminal installation | Microsoft Docs 깃 설치 Git - Downloads (git-scm.com) vscode 설치 Visual Studio Code - Code Editing. Redefined go 언어 설치 The Go Programming Language (golang.</description>
    </item>
    
    <item>
      <title>오픈소스 라이센스 정리</title>
      <link>https://blog.topasm.me/posts/opensource_licenses/</link>
      <pubDate>Wed, 25 Aug 2021 12:54:50 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/opensource_licenses/</guid>
      <description>깃헙에 많은 오픈소스가 공개되어 있는데 라이센스를 잘못 이용하면 문제가 생길 수 있기 때문에 대략적으로 알고 있으면 좋다
GNU GPL License:  GPL 라이센스라고 부르며 이 라이센스를 이용했으면 이용해서 만든 소스를 공개해야 한다. GPL 에도 LGPL, GPL 2 등 세부 종류가 있지만 대체적으로 오픈소스를 사용했다면 내 소스 오픈이 기본  대표적으로 리눅스가 이 라이센스이다.
BSD License:  이건 출처를 밝히는게 원칙. BSD 소스를 이용했으면 소스 사용을 표기해야 함. 상업용으로 사용해도 무관하고 소스공개를 하지 않아도 됨  대표적으로 OpenCV, FreeBSD, 맥os가 BSD라이센스이다.</description>
    </item>
    
    <item>
      <title>마크다운 문법 정리</title>
      <link>https://blog.topasm.me/posts/markdown_grammer/</link>
      <pubDate>Tue, 24 Aug 2021 21:11:13 +0900</pubDate>
      
      <guid>https://blog.topasm.me/posts/markdown_grammer/</guid>
      <description>블로그 개설 후 글을 쓰려고 하니 블로그에 가독성 좋은 글을 쓰기 위해서는 마크다운 문법에 대한 복습이 필요하다고 생각이 들었다. 최대한 내가 쓸 문법들만 모아서 정리해보았다.
Heading 제목 # H1 ## H2 ### H3 H1 H2 H3 Bold 볼드 Italic 이탈릭 Strikethrough 줄긋기 **bold text** *italicized text* ~~줄긋기~~ bold text italicized text 줄긋기
Blockquote 인용 &amp;gt; blockquote 인용하고 싶은글  blockquote 인용하고 싶은글
 Ordered List 순서있는 리스트 1. First item 2.</description>
    </item>
    
  </channel>
</rss>
